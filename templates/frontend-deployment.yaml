apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "bnetserver.fullname" . }}-frontend
  labels:
    app.kubernetes.io/name: {{ include "bnetserver.name" . }}
    helm.sh/chart: {{ include "bnetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "bnetserver.name" . }}-frontend
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "bnetserver.name" . }}-frontend
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["npm"]
          args: ["run", "frontend"]
          env:
            - name: NODE_ENV
              value: {{ .Values.env }}
            - name: ETCD_HOST
              value: http://{{ include "bnetserver.fullname" . }}-etcd-cluster-client:2379
            - name: RABBITMQ_SERVICE_NAME
              value: {{ .Release.Name }}-rabbitmq
            - name: RABBITMQ_USERNAME
              value: {{ .Values.rabbitmq.username }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-password
          ports:
            - containerPort: 1119
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /usr/src/app/config
            - name: logs
              mountPath: /usr/src/app/logs
          readinessProbe:
            tcpSocket:
              port: 1119
              initialDelaySeconds: 15
              periodSeconds: 10
          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "bnetserver.fullname" . }}-config
            items:
              - key: database.json
                path: database.json
              - key: winston.json
                path: winston.json
        - name: logs
          emptyDir: {}
    {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.frontend.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.frontend.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
